{"version":3,"file":"ui-library.min.js","sources":["../src/template-loader.js","../src/components/toast/toast.js","../src/components/theme-toggle/theme-toggle.js","../src/components/forms.js","../src/index.js"],"sourcesContent":["/**\n * Template processing utilities for web components\n */\n\n/**\n * Creates a document fragment from HTML string\n *\n * @param {string} html - HTML string to convert to DocumentFragment\n * @returns {DocumentFragment} Document fragment containing the parsed HTML\n */\nexport function htmlToFragment(html) {\n  const template = document.createElement(\"template\");\n  template.innerHTML = html.trim();\n  return template.content.cloneNode(true);\n}\n\n/**\n * Loads component template from an HTML file\n * This works with rollup-plugin-html which converts HTML imports to strings\n *\n * @param {string} htmlString - Imported HTML string\n * @param {ShadowRoot} shadowRoot - The shadow root to append the template to\n * @returns {DocumentFragment} Document fragment of the parsed template\n */\nexport function loadTemplate(htmlString, shadowRoot) {\n  const fragment = htmlToFragment(htmlString);\n  shadowRoot.appendChild(fragment);\n  return fragment;\n}\n\n/**\n * Combines HTML template with inline styles\n *\n * @param {string} htmlString - Imported HTML string\n * @param {string} cssString - Imported CSS string\n * @returns {string} Combined HTML with inline <style> element\n */\nexport function combineTemplateWithStyles(htmlString, cssString) {\n  // If the HTML already has a <style> tag, append to it\n  if (htmlString.includes(\"<style>\")) {\n    return htmlString.replace(\"<style>\", `<style>${cssString}`);\n  }\n\n  // Otherwise add the style tag at the beginning\n  return `<style>${cssString}</style>${htmlString}`;\n}\n\n/**\n * Applies styles to a shadow root using Constructable Stylesheets if supported\n *\n * @param {ShadowRoot} shadowRoot - The shadow root to apply styles to\n * @param {string} cssString - CSS string to apply\n * @param {CSSStyleSheet[]} documentSheets - Optional array of document stylesheets to inherit\n * @returns {boolean} True if styles were applied using Constructable Stylesheets\n */\nexport function applyStyles(shadowRoot, cssString, documentSheets = []) {\n  try {\n    // Check if Constructable Stylesheets are supported\n    if (\n      !(\"CSSStyleSheet\" in window) ||\n      !(\"replaceSync\" in CSSStyleSheet.prototype)\n    ) {\n      return false;\n    }\n\n    // Create component-specific stylesheet\n    const componentSheet = new CSSStyleSheet();\n    componentSheet.replaceSync(cssString);\n\n    // Apply document stylesheets + component stylesheet\n    if (documentSheets.length > 0) {\n      shadowRoot.adoptedStyleSheets = [...documentSheets, componentSheet];\n    } else {\n      // Just use component styles if no document stylesheets provided\n      shadowRoot.adoptedStyleSheets = [componentSheet];\n    }\n\n    return true;\n  } catch (error) {\n    console.error(\n      \"Error applying styles with Constructable Stylesheets:\",\n      error,\n    );\n    return false;\n  }\n}\n","import { applyStyles, loadTemplate } from \"../../template-loader.js\";\nimport toastTemplate from \"./toast.html\";\nimport toastStyles from \"./toast.css\";\n\n/**\n * Toast notification component\n * @element toast-element\n * @attr {string} type - Toast type: 'success', 'error', 'info', 'warning'\n * @attr {string} message - Toast message text\n * @attr {number} duration - Display duration in milliseconds\n * @attr {boolean} auto-hide - Whether to automatically hide the toast\n */\nexport class ToastElement extends HTMLElement {\n  constructor() {\n    super();\n\n    // Create shadow DOM\n    this.attachShadow({ mode: \"open\" });\n\n    // Apply styles\n    applyStyles(this.shadowRoot, toastStyles, document.adoptedStyleSheets);\n    loadTemplate(toastTemplate, this.shadowRoot);\n\n    // Initialize properties\n    this._duration = 3000;\n    this._autoHide = true;\n    this._timerId = null;\n    this._type = \"info\";\n\n    // Get required elements\n    this.messageElement = this.shadowRoot.querySelector(\".message\");\n    this.closeButton = this.shadowRoot.querySelector(\".close-btn\");\n\n    // Add event listener for close button\n    this.closeButton.addEventListener(\"click\", () => this.hide());\n  }\n\n  /**\n   * Web component lifecycle: When attributes change\n   */\n  static get observedAttributes() {\n    return [\"type\", \"message\", \"duration\", \"auto-hide\"];\n  }\n\n  /**\n   * Web component lifecycle: Component added to DOM\n   */\n  connectedCallback() {\n    // Initialize from attributes if present\n    if (this.hasAttribute(\"message\")) {\n      this.messageElement.textContent = this.getAttribute(\"message\");\n    }\n\n    if (this.hasAttribute(\"type\")) {\n      this.type = this.getAttribute(\"type\");\n    } else {\n      // Apply default type\n      this.classList.add(this._type);\n    }\n\n    if (this.hasAttribute(\"duration\")) {\n      this._duration = parseInt(this.getAttribute(\"duration\"), 10);\n    }\n\n    if (this.hasAttribute(\"auto-hide\")) {\n      this._autoHide = this.getAttribute(\"auto-hide\") !== \"false\";\n    }\n  }\n\n  /**\n   * Web component lifecycle: Attribute changed\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"message\" && this.messageElement) {\n      this.messageElement.textContent = newValue;\n    } else if (name === \"type\" && newValue) {\n      this.type = newValue;\n    } else if (name === \"duration\" && newValue) {\n      this._duration = parseInt(newValue, 10);\n    } else if (name === \"auto-hide\") {\n      this._autoHide = newValue !== \"false\";\n    }\n  }\n\n  /**\n   * Type getter\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * Type setter\n   */\n  set type(value) {\n    if (this._type) {\n      this.classList.remove(this._type);\n    }\n\n    this._type = value;\n    this.classList.add(value);\n  }\n\n  /**\n   * Message getter\n   */\n  get message() {\n    return this.messageElement ? this.messageElement.textContent : \"\";\n  }\n\n  /**\n   * Message setter\n   */\n  set message(value) {\n    if (this.messageElement) {\n      this.messageElement.textContent = value;\n    }\n  }\n\n  /**\n   * Duration getter\n   */\n  get duration() {\n    return this._duration;\n  }\n\n  /**\n   * Duration setter\n   */\n  set duration(value) {\n    this._duration = value;\n  }\n\n  /**\n   * Auto-hide getter\n   */\n  get autoHide() {\n    return this._autoHide;\n  }\n\n  /**\n   * Auto-hide setter\n   */\n  set autoHide(value) {\n    this._autoHide = value;\n  }\n\n  /**\n   * Show the toast notification\n   * @returns {ToastElement} This instance for chaining\n   */\n  show() {\n    if (this._visible) return this;\n\n    this._visible = true;\n    this.classList.add(\"visible\");\n\n    // Dispatch shown event\n    this.dispatchEvent(new CustomEvent(\"toast:shown\"));\n\n    // Reposition all toasts\n    this._repositionAllToasts();\n\n    if (this._autoHide && this._duration > 0) {\n      this._timerId = setTimeout(() => {\n        this.hide();\n      }, this._duration);\n    }\n\n    return this;\n  }\n\n  /**\n   * Hide the toast notification\n   * @returns {ToastElement} This instance for chaining\n   */\n  hide() {\n    if (!this._visible) return this;\n\n    this._visible = false;\n    this.classList.remove(\"visible\");\n\n    if (this._timerId) {\n      clearTimeout(this._timerId);\n      this._timerId = null;\n    }\n\n    // Add a small delay to allow for animation, matching GraphQLToast\n    setTimeout(() => {\n      // Dispatch hidden event\n      this.dispatchEvent(new CustomEvent(\"toast:hidden\"));\n\n      // If this is from auto-hide, remove the element from DOM\n      if (this._autoHide) {\n        this.parentNode?.removeChild(this);\n      }\n\n      // Reposition remaining toasts\n      this._repositionAllToasts();\n    }, 300); // Match this delay with CSS transition time\n\n    return this;\n  }\n\n  /**\n   * Reposition all toasts to stack properly\n   * @private\n   */\n  _repositionAllToasts() {\n    document.querySelectorAll(\"toast-element\").forEach((toast, index, all) => {\n      if (toast._visible) {\n        toast._updatePosition(index, all.length);\n      }\n    });\n  }\n\n  /**\n   * Update the position of this toast based on its index\n   * @param {number} index - Index of this toast\n   * @param {number} total - Total number of toasts\n   * @private\n   */\n  _updatePosition(index, total) {\n    const spaceBetween = 10; // px\n    const base = 20; // base distance from edge (px)\n\n    // Calculate height including margins\n    const height = this.offsetHeight + spaceBetween;\n\n    // Calculate position from bottom\n    const bottom = base + index * height;\n\n    // Update position\n    this.style.setProperty(\"bottom\", `${bottom}px`);\n\n    // Make sure toast is visible in viewport\n    this.style.setProperty(\"z-index\", String(10000 - index));\n  }\n}\n\n// Helper function\nexport function showToast(options = {}) {\n  const {\n    message = \"\",\n    type = \"info\",\n    duration = 3000,\n    autoHide = true,\n  } = options;\n\n  const toast = document.createElement(\"toast-element\");\n  toast.message = message;\n  toast.type = type;\n  toast.duration = duration;\n  toast.autoHide = autoHide;\n\n  document.body.appendChild(toast);\n  toast.show();\n\n  toast.addEventListener(\"toast-hidden\", () => {\n    setTimeout(() => {\n      if (document.body.contains(toast)) {\n        document.body.removeChild(toast);\n      }\n    }, 200);\n  });\n\n  return toast;\n}\n\n// Export for CommonJS\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports = { ToastElement, showToast };\n}\n\n// Export for global usage\nif (typeof window !== \"undefined\") {\n  window.ToastElement = ToastElement;\n  window.showToast = showToast;\n}\n","import { applyStyles, loadTemplate } from \"../../template-loader.js\";\nimport toggleTemplate from \"./theme-toggle.html\";\nimport toggleStyles from \"./theme-toggle.css\";\n\nexport class ThemeToggle extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    // Apply styles\n    applyStyles(this.shadowRoot, toggleStyles, document.adoptedStyleSheets);\n    loadTemplate(toggleTemplate, this.shadowRoot);\n    this.initializeTheme();\n  }\n\n  initializeTheme() {\n    // Check localStorage first\n    const savedTheme = localStorage.getItem(\"theme\");\n\n    if (savedTheme) {\n      document.documentElement.setAttribute(\"data-theme\", savedTheme);\n    } else {\n      // If no saved preference, check system preference\n      const prefersDark = window.matchMedia(\n        \"(prefers-color-scheme: dark)\",\n      ).matches;\n      document.documentElement.setAttribute(\n        \"data-theme\",\n        prefersDark ? \"dark\" : \"light\",\n      );\n      localStorage.setItem(\"theme\", prefersDark ? \"dark\" : \"light\");\n    }\n\n    // Listen for system theme changes\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", (e) => {\n        if (!localStorage.getItem(\"theme\")) {\n          const newTheme = e.matches ? \"dark\" : \"light\";\n          document.documentElement.setAttribute(\"data-theme\", newTheme);\n        }\n      });\n  }\n\n  setupListeners() {\n    const toggle = this.shadowRoot.querySelector(\".toggle\");\n    toggle.addEventListener(\"click\", () => {\n      const isDark =\n        document.documentElement.getAttribute(\"data-theme\") === \"dark\";\n      document.documentElement.setAttribute(\n        \"data-theme\",\n        isDark ? \"light\" : \"dark\",\n      );\n\n      // Optionally save preference\n      localStorage.setItem(\"theme\", isDark ? \"light\" : \"dark\");\n    });\n  }\n\n  connectedCallback() {\n    this.setupListeners();\n  }\n}\n","// Form error handling with PicoCSS\nexport class FormErrorHandler {\n  /**\n   * Handles API error responses by adding error attributes to form elements\n   * @param {Object} errorResponse - The error response object from the API\n   */\n  static handleErrors(errorResponse) {\n    // Check if there are errors to process\n    if (!errorResponse || !errorResponse.errors) {\n      console.error(\"Invalid error response format\");\n      return;\n    }\n\n    // Reset any existing errors first\n    FormErrorHandler.clearErrors();\n\n    // Process each form's errors\n    Object.keys(errorResponse.errors).forEach((formKey) => {\n      const formErrors = errorResponse.errors[formKey];\n\n      // Process each error for this form\n      formErrors.forEach((error) => {\n        if (!error.field || !error.message) {\n          console.warn(\"Invalid error format:\", error);\n          return;\n        }\n\n        // Find the input element\n        const fieldName = error.field;\n        const inputElement = document.querySelector(`[name=\"${fieldName}\"]`);\n\n        if (!inputElement) {\n          console.warn(\n            `Input element with name \"${error.field}\" not found. Adding error to form.`,\n          );\n\n          // Find the form element\n          const formElement = document.querySelector(\n            `form[name=\"${formKey}\"], form#${formKey}, form[data-form-id=\"${formKey}\"]`,\n          );\n          if (!formElement) {\n            // If we can't find the form, look for a div with the form's ID\n            const formContainer = document.getElementById(formKey);\n            if (!formContainer) {\n              console.error(\n                `Neither form nor container for \"${formKey}\" found`,\n              );\n              return;\n            }\n\n            // Add the error to the form container\n            FormErrorHandler.addError(formContainer, error.message);\n            return;\n          }\n\n          // Add the error to the form\n          FormErrorHandler.addError(formElement, error.message);\n          return;\n        }\n\n        // Use parent element (which would be the form field container in PicoCSS)\n        const parentElement = inputElement.parentElement;\n        if (!parentElement) {\n          console.warn(\n            `Parent element for input \"${error.field}\" not found. Adding error directly.`,\n          );\n          FormErrorHandler.addError(inputElement, error.message);\n          return;\n        }\n\n        // Add error to the parent element\n        FormErrorHandler.addError(parentElement, error.message);\n      });\n    });\n  }\n\n  /**\n   * Adds an error message to an element using PicoCSS ARIA attributes\n   * @param {HTMLElement} element - The element to add the error to\n   * @param {string} message - The error message\n   */\n  static addError(element, message) {\n    // Find the input element within the container (if element is not the input itself)\n    const inputElement =\n      element.tagName === \"INPUT\"\n        ? element\n        : element.querySelector(\"input, select, textarea\");\n\n    if (inputElement) {\n      // Set ARIA attributes for PicoCSS\n      inputElement.setAttribute(\"aria-invalid\", \"true\");\n\n      // Generate a unique ID for the helper element if needed\n      const helperId = `${inputElement.name}-helper`;\n      inputElement.setAttribute(\"aria-describedby\", helperId);\n\n      // Look for existing small/helper element\n      let helperElement = document.getElementById(helperId);\n\n      // If no helper element exists, create one\n      if (!helperElement) {\n        helperElement = document.createElement(\"small\");\n        helperElement.id = helperId;\n\n        // Add the small element after the input\n        if (inputElement.nextElementSibling) {\n          inputElement.parentNode.insertBefore(\n            helperElement,\n            inputElement.nextElementSibling,\n          );\n        } else {\n          inputElement.parentNode.appendChild(helperElement);\n        }\n      }\n\n      // Store original message if this is the first error\n      if (!helperElement.dataset.originalText) {\n        helperElement.dataset.originalText = helperElement.textContent;\n      }\n\n      // Set the error message\n      helperElement.textContent = message;\n    } else {\n      // For form level errors, create a message at the top\n      const errorMsg = document.createElement(\"p\");\n      errorMsg.className = \"error-message\";\n      errorMsg.setAttribute(\"role\", \"alert\");\n      errorMsg.textContent = message;\n\n      // Add to the beginning of the form\n      element.prepend(errorMsg);\n    }\n  }\n\n  /**\n   * Clear all existing error messages and restore original helper text\n   */\n  static clearErrors() {\n    // Reset all invalid inputs\n    document.querySelectorAll('[aria-invalid=\"true\"]').forEach((input) => {\n      // Remove the attribute completely rather than setting to false\n      // This returns the input to its initial state rather than marking as explicitly valid\n      input.removeAttribute(\"aria-invalid\");\n\n      // Get the helper element\n      const helperId = input.getAttribute(\"aria-describedby\");\n      if (helperId) {\n        const helperElement = document.getElementById(helperId);\n        if (helperElement && helperElement.dataset.originalText) {\n          // Restore original helper text\n          helperElement.textContent = helperElement.dataset.originalText;\n          delete helperElement.dataset.originalText;\n        }\n      }\n    });\n\n    // Remove any form-level error messages\n    document.querySelectorAll(\".error-message\").forEach((errMsg) => {\n      errMsg.remove();\n    });\n  }\n}\n\n// Create a utility class for handling GraphQL responses\nexport class GraphQLToastHandler {\n  /**\n   * Creates and displays toast notifications for GraphQL errors or success messages\n   * @param {Object} response - The GraphQL response object with data, errors, and extensions properties\n   * @param {number} [duration=4000] - How long the toast should stay visible (ms)\n   * @returns {Object} - The data portion of the response\n   */\n  static handleResponse(response, duration = 4000) {\n    // Check if there are errors to display\n    if (response.errors && response.errors.length > 0) {\n      // Display each error as a separate toast\n      response.errors.forEach((error) => {\n        GraphQLToastHandler.create(\n          \"error\",\n          error.message || \"An error occurred\",\n          duration,\n        );\n      });\n    } else if (response.extensions && response.extensions.successMessage) {\n      // Display success message if provided in extensions\n      GraphQLToastHandler.create(\n        \"success\",\n        response.extensions.successMessage,\n        duration,\n      );\n    }\n\n    // Return the data part of the response\n    return response.data;\n  }\n\n  /**\n   * Creates and shows a toast notification\n   * @param {string} type - Toast type: 'success', 'error', or 'info'\n   * @param {string} message - Message to display\n   * @param {number} duration - How long to show the toast in ms\n   * @returns {HTMLElement} - The created toast element\n   */\n  static create(type, message, duration = 4000) {\n    const toast = document.createElement(\"graphql-toast\");\n    toast.setAttribute(\"type\", type);\n    toast.setAttribute(\"message\", message);\n    toast.setAttribute(\"duration\", duration.toString());\n    document.body.appendChild(toast);\n    return toast;\n  }\n\n  /**\n   * Add HTMX extension for GraphQL responses\n   */\n  static registerHtmxExtension() {\n    // Only add if HTMX is available\n    if (typeof htmx === \"undefined\") {\n      console.warn(\"HTMX not found, GraphQL extension not loaded\");\n      return;\n    }\n\n    // Register the HTMX extension\n    htmx.defineExtension(\"graphql-toast\", {\n      onEvent: function (name, evt) {\n        // Handle JSON responses for HTMX requests\n        if (name === \"htmx:configRequest\") {\n          evt.detail.headers[\"Accept\"] = \"application/json\";\n          // Add all the params to the request\n          const params = new URLSearchParams(document.location.search);\n          for (const [key, value] of params.entries()) {\n            evt.detail.parameters[key] = value;\n          }\n        }\n\n        if (name === \"htmx:beforeRequest\") {\n          FormErrorHandler.clearErrors();\n        }\n\n        if (name === \"htmx:beforeSwap\") {\n          const xhr = evt.detail.xhr;\n\n          // Check if this is a JSON response\n          if (\n            xhr.getResponseHeader(\"Content-Type\")?.includes(\"application/json\")\n          ) {\n            try {\n              // Parse JSON response\n              const response = JSON.parse(xhr.responseText);\n\n              // Check if this looks like a GraphQL response (has data or errors)\n              if (\n                response &&\n                (response.data !== undefined || response.errors)\n              ) {\n                // Handle the GraphQL response notifications\n                GraphQLToastHandler.handleResponse(response);\n\n                // Check if there's HTML in the extensions\n                if (response.extensions && response.extensions.html) {\n                  // Use the HTML from extensions for the swap\n                  evt.detail.serverResponse = response.extensions.html;\n                } else if (!response.data && response.errors) {\n                  // If there's an error but no HTML or data, prevent the swap\n                  evt.detail.shouldSwap = false;\n                  return true;\n                }\n\n                if (response.extensions && response.extensions.errors) {\n                  FormErrorHandler.handleErrors(response.extensions);\n                }\n              }\n            } catch (e) {\n              console.error(\"Error processing JSON response:\", e);\n            }\n          }\n        }\n      },\n    });\n  }\n}\n","import { ToastElement } from \"./components/toast/toast.js\";\nimport { ThemeToggle } from \"./components/theme-toggle/theme-toggle.js\";\nimport { GraphQLToastHandler, FormErrorHandler } from \"./components/forms.js\";\n\n// The main initialization function\nasync function initialize() {\n  // prevent content flashing\n  document.body.style.opacity = 0;\n\n  try {\n    // 1. Load and apply Pico CSS\n    const picoResponse = await fetch(\n      \"https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css\",\n    );\n    const picoCSS = await picoResponse.text();\n\n    const picoStyleSheet = new CSSStyleSheet();\n    picoStyleSheet.replaceSync(picoCSS);\n    document.adoptedStyleSheets = [picoStyleSheet];\n\n    // 2. Add your custom styles\n    const customStyleSheet = new CSSStyleSheet();\n    customStyleSheet.replaceSync(`\n      :root {\n        --toast-border-radius: 8px;\n        /* More custom variables... */\n      }\n    `);\n\n    // 3. Apply stylesheets to document\n    document.adoptedStyleSheets = [picoStyleSheet, customStyleSheet];\n\n    // 4. Register web components if not already registered\n    if (!customElements.get(\"toast-element\")) {\n      customElements.define(\"toast-element\", ToastElement);\n    }\n\n    if (!customElements.get(\"theme-toggle\")) {\n      customElements.define(\"theme-toggle\", ThemeToggle);\n    }\n\n    // 5. Register HTMX plugin if HTMX is available\n    if (window.htmx) {\n      GraphQLToastHandler.registerHtmxExtension();\n    }\n\n    // Show the document\n    document.body.style.opacity = 1;\n\n    return true;\n  } catch (error) {\n    console.error(\"UI Library initialization failed:\", error);\n    // Show the document\n    document.body.style.opacity = 1;\n    return false;\n  }\n}\n\n// Expose library API\nconst UILibrary = {\n  initialize,\n  ToastElement,\n  ThemeToggle,\n  GraphQLToastHandler,\n  FormErrorHandler,\n};\n\n// Auto-initialize when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", initialize);\n} else {\n  initialize();\n}\n\n// Export for module usage\nexport default UILibrary;\n\n// Export for global usage\nwindow.UILibrary = UILibrary;\n"],"names":["loadTemplate","htmlString","shadowRoot","fragment","html","template","document","createElement","innerHTML","trim","content","cloneNode","htmlToFragment","appendChild","applyStyles","cssString","documentSheets","window","CSSStyleSheet","prototype","componentSheet","replaceSync","length","adoptedStyleSheets","error","console","ToastElement","HTMLElement","constructor","super","this","attachShadow","mode","_duration","_autoHide","_timerId","_type","messageElement","querySelector","closeButton","addEventListener","hide","observedAttributes","connectedCallback","hasAttribute","textContent","getAttribute","type","classList","add","parseInt","attributeChangedCallback","name","oldValue","newValue","value","remove","message","duration","autoHide","show","_visible","dispatchEvent","CustomEvent","_repositionAllToasts","setTimeout","clearTimeout","parentNode","removeChild","querySelectorAll","forEach","toast","index","all","_updatePosition","total","bottom","offsetHeight","style","setProperty","String","showToast","options","body","contains","module","exports","ThemeToggle","initializeTheme","savedTheme","localStorage","getItem","documentElement","setAttribute","prefersDark","matchMedia","matches","setItem","e","newTheme","setupListeners","isDark","FormErrorHandler","handleErrors","errorResponse","errors","clearErrors","Object","keys","formKey","field","warn","fieldName","inputElement","formElement","formContainer","getElementById","addError","parentElement","element","tagName","helperId","helperElement","id","nextElementSibling","insertBefore","dataset","originalText","errorMsg","className","prepend","input","removeAttribute","errMsg","GraphQLToastHandler","handleResponse","response","create","extensions","successMessage","data","toString","registerHtmxExtension","htmx","defineExtension","onEvent","evt","detail","headers","params","URLSearchParams","location","search","key","entries","parameters","xhr","getResponseHeader","includes","JSON","parse","responseText","undefined","serverResponse","shouldSwap","async","initialize","opacity","picoResponse","fetch","picoCSS","text","picoStyleSheet","customStyleSheet","customElements","get","define","UILibrary","readyState"],"mappings":"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"}